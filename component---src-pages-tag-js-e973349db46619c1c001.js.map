{"version":3,"file":"component---src-pages-tag-js-e973349db46619c1c001.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/pages/tag.js"],"sourcesContent":["import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport { Helmet } from 'react-helmet'\nimport { useLocation } from '@reach/router';\nimport Hero from \"../components/block_types/hero.js\";\nimport About from \"../components/block_types/about.js\";\nimport Services from \"../components/block_types/services.js\";\nimport Blog from \"../components/block_types/blog.js\";\nimport Newsletter from \"../components/block_types/newsletter.js\";\nimport Marque from \"../components/block_types/marque.js\";\nimport Contact from \"../components/block_types/contact.js\";\nimport InsideHero from \"../components/block_types/inside_hero.js\";\nimport Portfolio from \"../components/block_types/portfolio.js\";\nimport ContentDetail from \"../components/block_types/content_detail.js\";\nimport TagBlogs from \"../components/block_types/tag_blogs\";\nimport CategoryBlogs from \"../components/block_types/category_blogs\";\n\nexport const query = graphql `\n\n{\n\nallMarkdownRemark(filter: {frontmatter: {api_handle: {eq: \"tag\"}}}) {\n    nodes {\n      frontmatter {\n        api_handle\n        category\n        date_created\n        image\n        meta_description\n        meta_keywords\n        meta_title\n        og_description\n        og_image\n        og_site_name\n        og_title\n        page_type\n        seo_title\n        short_description\n        title\n        twitter_card_type\n        twitter_site\n        block_types {\n          type\n          attrs {\n            values {\n              back_to_link\n              back_to_link_text\n              button_link\n              button_link_1\n              button_text\n              button_text_1\n              description\n              image\n              images\n              details\n              link\n              num_items\n              short_description\n              terms\n              title\n              title_1\n              title_2\n              title_3\n              title_4\n              sub_title\n              type\n              video_path\n              accordian_items {\n                description\n                title\n              }\n              content\n              marque_1 {\n                title\n              }\n              marque_2 {\n                title\n              }\n            }\n          }\n        }\n        portfolio_items {\n          image\n          title\n          title_2\n        }\n      }\n    \n    }\n  }\n}\n\n`\n\n/*export const Head = () => <Seo data={data} />;*/\n\n\n\nexport default function Tag({ data }) {\n  \n  const page = data.allMarkdownRemark.nodes[0].frontmatter;\n  const blocks = page.block_types;\n  console.log(page);\n \n  const location = useLocation();\n  const domainUrl = location.origin;\n  const CurrentPageUrl = location.href;\n\n  return (\n    <Layout>\n     \n      <Helmet>\n            <title>{page.seo_title}</title>\n            <meta content={page.meta_keywords} name=\"keywords\" />\n            <meta content={page.meta_description} name=\"description\" />\n            <meta property=\"og:title\" content={page.og_title} />\n            <meta property=\"og:description\" content={page.og_description} />\n            <meta property=\"og:image\" content={`${domainUrl}/assets/${page.og_image}`} />\n            <meta property=\"og:site_name\" content={page.site_name} />\n            <meta property=\"og:url\" content={CurrentPageUrl} />\n            <meta name=\"twitter:card\" content={page.twitter_card_type} />\n            <meta name=\"twitter:title\" content={page.seo_title} />\n            <meta name=\"twitter:description\" content={page.og_description} />\n            <meta name=\"twitter:image\" content={`${domainUrl}/assets/${page.og_image}`} />\n            <meta name=\"twitter:site\" content={page.twitter_site} />\n      </Helmet>\n\n     \n      {blocks &&\n        blocks.map((item, index) => {\n         \n          \n          if (item.attrs && item.attrs.values) {\n            switch (item.attrs.values.type) {\n              case 'hero':\n                return <Hero key={index} data={item.attrs.values} />;\n              case 'about':\n                return <About key={index} data={item.attrs.values} />;\n              case 'services':\n                return <Services key={index} passedData={item.attrs.values} />;\n              case 'portfolio':\n                return <Portfolio key={index} passedData={item.attrs.values} />;\n              case 'blog':\n                return <Blog key={index} passedData={item.attrs.values} />;\n              case 'blog_detail':\n                return <ContentDetail key={index} passedData={item.attrs.values} />;\n              case 'newsletter_form':\n                return <Newsletter key={index} data={item.attrs.values} />;\n              case 'marque':\n                return <Marque key={index} data={item.attrs.values} />;\n              case 'contact':\n                return <Contact key={index} data={item.attrs.values} />;\n              case 'inside_hero':\n                return <InsideHero key={index} data={item.attrs.values} />;\n              case 'tag_blogs':\n                return <TagBlogs key={index} passedData={item.attrs.values} />;\n              case 'category_blogs':\n                return <CategoryBlogs key={index} passedData={item.attrs.values} />;\n              default:\n                return null;\n            }\n          } else {\n            return null;\n          }\n        })}\n    </Layout>\n  )}\n\n"],"names":["Tag","_ref","data","page","allMarkdownRemark","nodes","frontmatter","blocks","block_types","console","log","location","useLocation","domainUrl","origin","CurrentPageUrl","href","React","Layout","Helmet","seo_title","content","meta_keywords","name","meta_description","property","og_title","og_description","og_image","site_name","twitter_card_type","twitter_site","map","item","index","attrs","values","type","Hero","key","About","Services","passedData","Portfolio","Blog","ContentDetail","Newsletter","Marque","Contact","InsideHero","TagBlogs","CategoryBlogs"],"sourceRoot":""}